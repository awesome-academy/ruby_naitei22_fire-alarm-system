en:
  errors:
    messages:
      not_saved:
        one: "1 error prohibited this %{model} from being saved"
        other: "%{count} errors prohibited this %{model} from being saved"
  activerecord: 
    errors:
      messages:
        blank: "can't be blank"
        taken: "has already been taken"
        inclusion: "is not included in the list"
  api: 
    v1:
      invitations:
        create:
          success: "Invitation code created successfully."
      base_controller:
        success: "Operation was successful."
      authentication_controller:
        update_role:
          success: "User role updated successfully."
          user_not_found: "User not found."
          invalid_role: "The provided role is invalid."
          cannot_demote_self: "Admins cannot demote themselves."
  services:
    cloudinary:
      upload:
        error: "Cloudinary upload failed: %{message}"
    snapshots:
      fake_capture:
        no_samples_found: "No sample images found in %{dir}"
    ml_clients:
      timeout: "AI Service timed out: %{message}"
      connection_error: "AI Service connection error: %{message}"
    notifications:
      telegram:
        message_html: |
          *ðŸ”¥ URGENT FIRE WARNING ðŸ”¥*

          *Area:* %{zone_name}
          *Device:* %{owner_name} (%{owner_type})
          *Time:* %{timestamp}

          *Details:*
          %{message}
  alert_mailer:
    new_alert_notification:
      subject: "ðŸ”¥ [WARNING] An incident has been detected!"
      header: "Urgent System Alert!"
      intro_html: "A new alert has been recorded in the area: <strong>%{zone_name}</strong>"
      content_label: "Content"
      origin_label: "Source"
      time_label: "Time"
      snapshot_header: "Snapshot from camera"
      call_to_action: "Please log in to the system to handle it."
      thank_you: "Thank you."
